|shizhong
clk => clk.IN4
key[0] => key[0].IN2
key[1] => key[1].IN2
key[2] => key[2].IN2
key[3] => key[3].IN2
rst_n => rst_n.IN4
seg[0] <= display:display.seg
seg[1] <= display:display.seg
seg[2] <= display:display.seg
seg[3] <= display:display.seg
seg[4] <= display:display.seg
seg[5] <= display:display.seg
seg[6] <= display:display.seg
seg[7] <= display:display.seg
sel[0] <= display:display.sel
sel[1] <= display:display.sel
sel[2] <= display:display.sel
beep_out <= beep:beep.beep_out


|shizhong|counter:counter
key[0] => stop.ENA
key[1] => always6.IN1
key[2] => always2.IN1
key[3] => always4.IN1
clk => shi_h[0].CLK
clk => shi_h[1].CLK
clk => shi_h[2].CLK
clk => shi_h[3].CLK
clk => data[20]~reg0.CLK
clk => data[21]~reg0.CLK
clk => data[22]~reg0.CLK
clk => data[23]~reg0.CLK
clk => shi_l[0].CLK
clk => shi_l[1].CLK
clk => shi_l[2].CLK
clk => shi_l[3].CLK
clk => data[16]~reg0.CLK
clk => data[17]~reg0.CLK
clk => data[18]~reg0.CLK
clk => data[19]~reg0.CLK
clk => fen_h[0].CLK
clk => fen_h[1].CLK
clk => fen_h[2].CLK
clk => fen_h[3].CLK
clk => data[12]~reg0.CLK
clk => data[13]~reg0.CLK
clk => data[14]~reg0.CLK
clk => data[15]~reg0.CLK
clk => fen_l[0].CLK
clk => fen_l[1].CLK
clk => fen_l[2].CLK
clk => fen_l[3].CLK
clk => data[8]~reg0.CLK
clk => data[9]~reg0.CLK
clk => data[10]~reg0.CLK
clk => data[11]~reg0.CLK
clk => miao_h[0].CLK
clk => miao_h[1].CLK
clk => miao_h[2].CLK
clk => miao_h[3].CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => miao_l[0].CLK
clk => miao_l[1].CLK
clk => miao_l[2].CLK
clk => miao_l[3].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
clk => cnt[24].CLK
clk => cnt[25].CLK
clk => stop.CLK
rst_n => shi_h[0].ACLR
rst_n => shi_h[1].ACLR
rst_n => shi_h[2].ACLR
rst_n => shi_h[3].ACLR
rst_n => data[20]~reg0.ACLR
rst_n => data[21]~reg0.ACLR
rst_n => data[22]~reg0.ACLR
rst_n => data[23]~reg0.ACLR
rst_n => shi_l[0].ACLR
rst_n => shi_l[1].ACLR
rst_n => shi_l[2].ACLR
rst_n => shi_l[3].ACLR
rst_n => data[16]~reg0.ACLR
rst_n => data[17]~reg0.ACLR
rst_n => data[18]~reg0.ACLR
rst_n => data[19]~reg0.ACLR
rst_n => fen_h[0].ACLR
rst_n => fen_h[1].ACLR
rst_n => fen_h[2].ACLR
rst_n => fen_h[3].ACLR
rst_n => data[12]~reg0.ACLR
rst_n => data[13]~reg0.ACLR
rst_n => data[14]~reg0.ACLR
rst_n => data[15]~reg0.ACLR
rst_n => fen_l[0].ACLR
rst_n => fen_l[1].ACLR
rst_n => fen_l[2].ACLR
rst_n => fen_l[3].ACLR
rst_n => data[8]~reg0.ACLR
rst_n => data[9]~reg0.ACLR
rst_n => data[10]~reg0.ACLR
rst_n => data[11]~reg0.ACLR
rst_n => miao_h[0].ACLR
rst_n => miao_h[1].ACLR
rst_n => miao_h[2].ACLR
rst_n => miao_h[3].ACLR
rst_n => data[4]~reg0.ACLR
rst_n => data[5]~reg0.ACLR
rst_n => data[6]~reg0.ACLR
rst_n => data[7]~reg0.ACLR
rst_n => miao_l[0].ACLR
rst_n => miao_l[1].ACLR
rst_n => miao_l[2].ACLR
rst_n => miao_l[3].ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
rst_n => stop.ACLR
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => cnt[16].ACLR
rst_n => cnt[17].ACLR
rst_n => cnt[18].ACLR
rst_n => cnt[19].ACLR
rst_n => cnt[20].ACLR
rst_n => cnt[21].ACLR
rst_n => cnt[22].ACLR
rst_n => cnt[23].ACLR
rst_n => cnt[24].ACLR
rst_n => cnt[25].ACLR
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[8] <= data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[9] <= data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[10] <= data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[11] <= data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[12] <= data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[13] <= data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[14] <= data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[15] <= data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[16] <= data[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[17] <= data[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[18] <= data[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[19] <= data[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[20] <= data[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[21] <= data[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[22] <= data[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[23] <= data[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|shizhong|display:display
data[0] => show_data.DATAA
data[1] => show_data.DATAA
data[2] => show_data.DATAA
data[3] => show_data.DATAA
data[4] => show_data.DATAA
data[5] => show_data.DATAA
data[6] => show_data.DATAA
data[7] => show_data.DATAA
data[8] => show_data.DATAA
data[9] => show_data.DATAA
data[10] => show_data.DATAA
data[11] => show_data.DATAA
data[12] => show_data.DATAA
data[13] => show_data.DATAA
data[14] => show_data.DATAA
data[15] => show_data.DATAA
data[16] => show_data.DATAA
data[17] => show_data.DATAA
data[18] => show_data.DATAA
data[19] => show_data.DATAA
data[20] => show_data.DATAA
data[21] => show_data.DATAA
data[22] => show_data.DATAA
data[23] => show_data.DATAA
clk => show_data[0].CLK
clk => show_data[1].CLK
clk => show_data[2].CLK
clk => show_data[3].CLK
clk => sel[0]~reg0.CLK
clk => sel[1]~reg0.CLK
clk => sel[2]~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => state~1.DATAIN
rst_n => sel[0]~reg0.PRESET
rst_n => sel[1]~reg0.PRESET
rst_n => sel[2]~reg0.PRESET
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => state~3.DATAIN
rst_n => show_data[3].ENA
rst_n => show_data[2].ENA
rst_n => show_data[1].ENA
rst_n => show_data[0].ENA
sel[0] <= sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= sel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|shizhong|key_module:key_module
clk => key_out[0]~reg0.CLK
clk => key_out[1]~reg0.CLK
clk => key_out[2]~reg0.CLK
clk => key_out[3]~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
clk => key_press.CLK
rst_n => key_out[0]~reg0.PRESET
rst_n => key_out[1]~reg0.PRESET
rst_n => key_out[2]~reg0.PRESET
rst_n => key_out[3]~reg0.PRESET
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => cnt[16].ACLR
rst_n => cnt[17].ACLR
rst_n => cnt[18].ACLR
rst_n => cnt[19].ACLR
rst_n => cnt[20].ACLR
rst_n => cnt[21].ACLR
rst_n => cnt[22].ACLR
rst_n => cnt[23].ACLR
rst_n => key_press.ACLR
key[0] => key_out.DATAB
key[0] => WideOr0.IN0
key[1] => key_out.DATAB
key[1] => WideOr0.IN1
key[2] => key_out.DATAB
key[2] => WideOr0.IN2
key[3] => key_out.DATAB
key[3] => WideOr0.IN3
key_out[0] <= key_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_out[1] <= key_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_out[2] <= key_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_out[3] <= key_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|shizhong|beep:beep
clk => beep_out~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => beep_out~reg0.PRESET
key[0] => Decoder0.IN3
key[1] => Decoder0.IN2
key[2] => Decoder0.IN1
key[3] => Decoder0.IN0
beep_out <= beep_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


